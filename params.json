{"name":"ElFinderBundle for Symfony2","tagline":"ElFinderBundle provides ElFinder integration with TinyMCE and CKEditor","body":"FMElfinderBundle\r\n================\r\n\r\n[ElFinder](https://github.com/Studio-42/elFinder) integration in Symfony2\r\n\r\n[![Build Status](https://secure.travis-ci.org/helios-ag/FMElfinderBundle.png)](http://travis-ci.org/helios-ag/FMElfinderBundle)\r\n[![SensioLabsInsight](https://insight.sensiolabs.com/projects/604032ab-06ef-4ee2-b0cf-bb5240b9cd17/mini.png)](https://insight.sensiolabs.com/projects/604032ab-06ef-4ee2-b0cf-bb5240b9cd17)\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/helios-ag/fmelfinderbundle/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n[![Dependency Status](https://www.versioneye.com/user/projects/53db56ab4b3ac87d6a0001ff/badge.svg?style=flat)](https://www.versioneye.com/user/projects/53db56ab4b3ac87d6a0001ff)\r\n\r\n[![Latest Stable Version](https://poser.pugx.org/helios-ag/fm-elfinder-bundle/v/stable.svg)](https://packagist.org/packages/helios-ag/fm-elfinder-bundle) [![Total Downloads](https://poser.pugx.org/helios-ag/fm-elfinder-bundle/downloads.svg)](https://packagist.org/packages/helios-ag/fm-elfinder-bundle) [![Latest Unstable Version](https://poser.pugx.org/helios-ag/fm-elfinder-bundle/v/unstable.svg)](https://packagist.org/packages/helios-ag/fm-elfinder-bundle) [![License](https://poser.pugx.org/helios-ag/fm-elfinder-bundle/license.svg)](https://packagist.org/packages/helios-ag/fm-elfinder-bundle)\r\n\r\nelFinder is an open-source file manager for web, written in JavaScript using jQuery UI.\r\nCreation is inspired by simplicity and convenience of Finder program used in Mac OS X operating system.\r\n\r\nRecommended bundles to use with:\r\n\r\n[TinymceBundle](https://github.com/stfalcon/TinymceBundle/)\r\n\r\n[IvoryCKEditorBundle](https://github.com/egeloen/IvoryCKEditorBundle/)\r\n\r\n[TrsteelCkeditorBundle](https://github.com/trsteel88/TrsteelCkeditorBundle)\r\n\r\n- [Installation](#installation)\r\n    - [Step 1: Installation](#step-1-installation)\r\n    - [Step 2: Enable the bundle](#step-2-enable-the-bundle)\r\n    - [Step 3: Import FMElfinderBundle routing file](#step-3-import-fmelfinderbundle-routing-file)\r\n    - [Step 4: Configure your application's security.yml](#step-4-configure-your-applications-securityyml)\r\n    - [Step 5: Configure assetic](#step-5-configure-assetic)\r\n    - [Step 6: Install and dump assets](#step-6-install-and-dump-assets)\r\n- [Basic configuration](#basic-configuration)\r\n    - [Add configuration options to your config.yml](#add-configuration-options-to-your-configyml)\r\n- [Configuring symfony service as a volumeDriver](#configuring-symfony-service-as-a-volumedriver)\r\n- [ElFinder form type](#elfinder-form-type)\r\n- [Using ElFinder with CKEditorBundle](#using-elfinder-with-ckeditorbundle)\r\n    - [Step 1: Installation:](#step-1-installation-1)\r\n    - [Step 2: Configure CKEditor setting via settings.yml or through form builder:](#step-2-configure-ckeditor-setting-via-settingsyml-or-through-form-builder)\r\n- [Using ElFinder with TinyMCE](#using-elfinder-with-tinymce)\r\n    - [Using ElfinderBundle with TinyMCEBundle](#using-elfinderbundle-with-tinymcebundle)\r\n    - [Integrating with TinyMCE 4.x](#integrating-with-tinymce-4x)\r\n- [Custom configuration provider](#custom-configuration-provider)\r\n\r\n## Installation\r\n\r\nTo install this bundle, you'll need both the lib [ElFinderPHP](https://github.com/helios-ag/ElFinderPHP)\r\nand this bundle.\r\n\r\nThis instruction explain how to setup bundle on Symfony 2.1 and newer\r\n\r\n### Step 1: Installation\r\n\r\nYou have a choice to install bundle of version 1.x (1.x branch, [documentation](https://github.com/helios-ag/FMElfinderBundle/blob/1.0/README.md)) or 2.x branch\r\nAdd FMElfinderBundle in your composer.json:\r\n\r\n```js\r\n{\r\n    \"require\": {\r\n        \"helios-ag/fm-elfinder-bundle\": \"2.x\"\r\n    }\r\n}\r\n```\r\n\r\nNow tell composer to download the bundle by running the command:\r\n\r\n``` bash\r\n$ php composer.phar update helios-ag/fm-elfinder-bundle\r\n```\r\n\r\n### Step 2: Enable the bundle\r\n\r\nEnable the bundle in the kernel:\r\n\r\n``` php\r\n<?php\r\n// app/AppKernel.php\r\n\r\npublic function registerBundles()\r\n{\r\n    $bundles = array(\r\n        // ...\r\n        new FM\\ElfinderBundle\\FMElfinderBundle(),\r\n    );\r\n}\r\n```\r\n### Step 3: Import FMElfinderBundle routing file\r\n\r\n``` yaml\r\n# app/config/routing.yml\r\nelfinder:\r\n     resource: \"@FMElfinderBundle/Resources/config/routing.yml\"\r\n```\r\n\r\n### Step 4: Configure your application's security.yml\r\n\r\nSecure ElFinder with access_control:\r\n``` yaml\r\n# app/config/security.yml\r\nsecurity:\r\n\r\n    //....\r\n    access_control:\r\n        - { path: ^/efconnect, role: ROLE_USER }\r\n        - { path: ^/elfinder, role: ROLE_USER }\r\n\r\n```\r\nrole ROLE_USER is provided as example.\r\n\r\n### Step 5: Configure assetic\r\n\r\nUnder assetic section of your config.yml, add FMElfinderBundle to bundles section, also you can enable uglify js/css\r\ncompressor (also you need to enable option \"compression: true\" under bundle configuration).\r\n\r\nAlso set \"use_controller: false\".\r\n\r\n``` yaml\r\nassetic:\r\n    debug:          %kernel.debug%\r\n    use_controller: false\r\n    bundles:        [FMElfinderBundle]\r\n    java: /usr/bin/java\r\n    filters:\r\n        cssrewrite: ~\r\n        uglifyjs2:\r\n            # the path to the uglifyjs executable\r\n            bin: /usr/bin/uglifyjs\r\n        uglifycss:\r\n            bin: /usr/bin/uglifycss\r\n```\r\n\r\n### Step 6: Install and dump assets\r\n\r\nInstall and dump assets using symfony built-in commands:\r\n\r\n```sh\r\napp/console assets:install web\r\napp/console assetic:dump --env=prod\r\n```\r\n\r\n## Basic configuration\r\n\r\n### Add configuration options to your config.yml\r\n\r\n```\r\nfm_elfinder:\r\n    instances:\r\n        default:\r\n            locale: %locale% # defaults to current request locale\r\n            editor: ckeditor # other choices are tinymce or simple, and form\r\n            fullscreen: true # defaults true, applies to simple and ckeditor editors\r\n            include_assets: true # disable if you want to handle loading of the javascript and css assets yourself\r\n            compression: false # enable if you configured the uglifycss and uglifyjs2 assetic filters and want compression\r\n            connector:\r\n                debug: false # defaults to false\r\n                roots:       # at least one root must be defined\r\n                    uploads:\r\n                        showhidden: false # defaults to false\r\n                        driver: LocalFileSystem\r\n                        path: uploads\r\n                        upload_allow: ['image/png', 'image/jpg', 'image/jpeg']\r\n                        upload_deny: ['all']\r\n                        upload_max_size: 2M\r\n```\r\n* default - instance of elfinder, can be used to define multiple configurations of ElFinder, allows simultaneous configuration for different types of WYSIWYG editors in your project\r\n* path - define root directory for the files inside web/ directory, default is \"uploads\". Make sure to set proper write/read permissions to this directory.\r\n* url - url to be prefixed to image path, for displaying. Can be either absolute or relative. If relative, it will be prefixed with the applications base-url. If left blank, url will be the base-url, appened with the value of the 'path' parameter\r\n* driver - can be LocalFileSystem, FTP or MySQL2, currently supported only LocalFileSystem, default is LocalFileSystem\r\n* locale - locale determines, which language, ElFinder will use, to translate user interface, default is current request locale\r\n* editor - determines what template to render, to be compatible with WYSIWYG web editor, currently supported options are:\r\n \"ckeditor\", \"tinymce\" and \"simple\". How to configure CKEDitor and TinyMCE to work with this bundle, will be explained further in this document.\r\n \"simple\" can be used as standalone filebrowser for managing and uploading files.\r\n* showhidden - hides directories starting with . (dot)\r\n* connector - root node for defining options for elfinder root directiories and debug option\r\n* roots - define\r\n\r\n## Configuring symfony service as a volumeDriver\r\nvolumeDriver can be declared as Symfony service\r\nThe service should however be an instance of the FM\\ElFinderPHP\\Driver\\ElFinderVolumeDriver class. This check is to\r\nensure the service is a valid ElFinder VolumeDriver.\r\n\r\nTo configure a root with a service-driver you can simply use the service id as the drive key:\r\n\r\n```\r\nfm_elfinder:\r\n    connector:\r\n        roots:\r\n            uploads:\r\n                driver: elfinder.driver.filesystem\r\n                path: uploads\r\n```\r\n\r\nThis means that if you add the service definition:\r\n\r\n```xml\r\n<service id=\"elfinder.driver.filesystem\" class=\"FM\\ElFinderPHP\\Driver\\ElFinderVolumeLocalFileSystem\" />\r\n```\r\n\r\n## Elfinder Form Type\r\n\r\nSince version 2.1 of the bundle, bundle come with custom form type, that is simple <input type=\"text\"/> , that provide\r\nelfinder callback (opens Elfinder window), configuration for this form type is simple\r\nFirst, define instance with editor setted to \"form\":\r\n```\r\nfm_elfinder:\r\n    instances:\r\n        form:\r\n            locale: %locale% # defaults to current request locale\r\n            editor: form # other choices are tinymce or simple, and form\r\n            showhidden: false # defaults to false\r\n            fullscreen: true # defaults true, applies to simple and ckeditor editors\r\n            include_assets: true # disable if you want to handle loading of the javascript and css assets yourself\r\n            compression: false # enable if you configured the uglifycss and uglifyjs2 assetic filters and want compression\r\n            connector:\r\n                debug: false # defaults to false\r\n                roots:       # at least one root must be defined\r\n                    uploads:\r\n                        driver: LocalFileSystem\r\n                        path: uploads\r\n                        upload_allow: ['image/png', 'image/jpg', 'image/jpeg']\r\n                        upload_deny: ['all']\r\n                        upload_max_size: 2M\r\n```\r\n\r\nOn second step, add to your form builder (or form class), elfinder type, and pass instance and enable parameters:\r\n\r\n```php\r\n$form = $this->createFormBuilder()\r\n    ->add('elfinder','elfinder', array('instance'=>'form', 'enable'=>true))\r\n    ->getForm();\r\n```\r\n\r\nRender form with twig as usual:\r\n```jinja\r\n<form action=\"\" method=\"post\" {{ form_enctype(form) }}>\r\n        {{ form_widget(form) }}\r\n        <input type=\"submit\" />\r\n    </form>\r\n```\r\n\r\n## Using ElFinder with [CKEditorBundle](https://github.com/trsteel88/TrsteelCkeditorBundle)\r\n\r\nMostly filebrowsers used with WYSIWYG editors to upload images and other files. The example above will show how to\r\nconfigure [CKEditorBundle](https://github.com/trsteel88/TrsteelCkeditorBundle) by Trsteel to work with ElFinder\r\nthrough [FMElFinderBundle](https://github.com/helios-ag/FMElFinderBundle)\r\nAlso take a view to @egeloen [IvoryCKEditorBundle](https://github.com/egeloen/IvoryCKEditorBundle), which includes\r\n[configuration guide](https://github.com/egeloen/IvoryCKEditorBundle/blob/master/Resources/doc/file_browse_upload.md) for both bundles\r\n\r\n### Step 1: Installation:\r\n\r\nInstall both bundles according README files\r\n\r\n### Step 2: Configure CKEditor setting via settings.yml or through form builder:\r\n\r\n```yml\r\ntrsteel_ckeditor:\r\n    ...\r\n    filebrowser_image_browse_url:\r\n        route: elfinder\r\n        route_parameters:\r\n             instance: ckeditor\r\n```\r\n\r\nor if you prefer Ivory CKEditor Bundle\r\n\r\n```yml\r\nivory_ck_editor:\r\n    default_config: default\r\n    configs:\r\n        default:\r\n            filebrowserBrowseRoute: elfinder\r\n            filebrowserBrowseRouteParameters:\r\n                instance: ckeditor\r\n\r\n```\r\n\r\nNote that instance name should be the same as configured in elfinder bundle\r\n\r\n```php\r\n\r\n<?php\r\n\r\n$form = $this->createFormBuilder()\r\n            ->add('content', 'ckeditor', array(\r\n                'filebrowser_image_browse_url' => array(\r\n                    'route'            => 'elfinder',\r\n                    'route_parameters' => array('instance' => 'ckeditor'),\r\n                ),\r\n            ))\r\n            ->getForm()\r\n;\r\n```\r\n\r\nElFinder will be available under Insert Image dialog\r\n\r\n## Using ElFinder with TinyMCE\r\n\r\nYou can integrate TinyMCE byself or use Bundles that already add TinyMCE functionality to your Symfony project.\r\nBelow instruction how to integrate [FMElfinderBundle](https://github.com/helios-ag/FMElfinderBundle) with [TinyMCEBundle](https://github.com/stfalcon/TinymceBundle)\r\n\r\n### Using ElfinderBundle with [TinyMCEBundle](https://github.com/stfalcon/TinymceBundle)\r\nInstruction for bundle version 0.2.1 (TinyMCE 3.x), instruction for TinyMCE 4.x, you can find at the end of this\r\ndocument.\r\nDownload both bundles, configure, dump and install assets as written in installation steps\r\n\r\n### Configuration\r\n\r\nUpdate the editor property in your app/config.yml\r\nSet TinyMce popup path:\r\n```yml\r\nfm_elfinder:\r\n    editor: tinymce\r\n    tinymce_popup_path: \"asset[bundles/stfalcontinymce/vendor/tiny_mce/tiny_mce_popup.js]\"\r\n```\r\nUnder tinymce configuration node, theme configuration, add:\r\nfile_browser_callback : 'elFinderBrowser'\r\n\r\n```yml\r\nstfalcon_tinymce:\r\n    theme:\r\n        simple:\r\n            file_browser_callback : 'elFinderBrowser'\r\n```\r\n\r\nafter (  {{ tinymce_init() }} ) function call\r\nplace ElfinderBundle's function: {{ elfinder_tinymce_init('instance_name', {'width':'900', 'height': '450', 'title':'ElFinder 2.0'}) }}\r\nas shown below\r\n\r\n```jinja\r\n{{ tinymce_init() }}\r\n{{ elfinder_tinymce_init('instance_name') }}\r\n```\r\n\r\ninstance_name is instance of elfinder's configuration\r\n\r\n### Integrating with TinyMCE 4.x\r\n\r\nUpdate the editor property in your app/config.yml\r\n```yml\r\n fm_elfinder:\r\n     editor: tinymce4\r\n```\r\nUnder tinymce configuration node, theme configuration, add:\r\n file_browser_callback : elFinderBrowser\r\n\r\n```yml\r\nstfalcon_tinymce:\r\n     theme:\r\n         simple:\r\n             file_browser_callback : elFinderBrowser\r\n```\r\n\r\nbefore (  {{ tinymce_init() }} ) function call (order is important)\r\nplace ElfinderBundle's function: {{ elfinder_tinymce_init4('instance_name', {'width':'900', 'height': '450', 'title':'ElFinder 2.0'} ) }}\r\nas shown below\r\n```jinja\r\n     {{ elfinder_tinymce_init4('instance_name') }}\r\n     {{ tinymce_init() }}\r\n```\r\n\r\ninstance_name is instance of elfinder's configuration\r\n\r\nThat's all, Elfinder is configured to work with TinyMCE editor.\r\n\r\n#Custom configuration provider\r\n\r\nElFinder bundle allows to override his configuration provider service:\r\n\r\n```yaml\r\nfm_elfinder:\r\n    configuration_provider: elfinder.configurator\r\n```\r\nwhere 'elfinder.configurator' is default ElFinder's bundle service to read configuration from DIC\r\n\r\nTo override service, simply define your own service:\r\n```yaml\r\nservices:\r\n    my_elfinder_configurator:\r\n        class:        Acme\\DemoBundle\\MyElfinderConfigurator\r\n        arguments:    [\"%my_arguments%\"]\r\n```\r\n\r\nConfiguration class must implement interface ElFinderConfigurationProviderInterface\r\n\r\nmethod getConfiguration($instance) should return array of parameters compatible with ElFinder bundle configuration\r\n\r\n\r\nManual integration guide can be found [here](/INTEGRATION_GUIDE.md)\r\n\r\n##Todo\r\n\r\nMore tests, gridfs support, complex user intergration(?)\r\n\r\n##Changelog\r\n### 2.1\r\n* New Elfinder form type, provides basic <input type=\"text\"/> field with Elfinder callback\r\n\r\n### 2.0\r\n* Multiple instances of elfinder configuration (allows multiple editors in one project, with different elfinder configurations)\r\n\r\n### 1.4\r\n\r\n* Made compressing assets optional. When compressing is active, it now uses\r\n  uglify.js instead of YUI compressor.\r\n\r\n\r\n\r\n\r\n","google":"UA-18798701-8","note":"Don't delete this file! It's used internally to help with page regeneration."}